{"version":3,"sources":["images/backgroundImage.jpg","App.styles.ts","components/QuestionCard.styles.ts","components/QuestionCard.tsx","components/Scoreboard.tsx","API.ts","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","Image","Wrapper","styled","div","_templateObject2","ButtonWrapper","_ref","correct","userClicked","QuestionCard","question","answers","callback","userAnswer","questionNum","totalQuestions","_jsxs","children","className","_jsx","dangerouslySetInnerHTML","__html","map","ans","index","correct_answer","answer","disabled","onClick","value","ScoreBoard","score","Difficulty","fetchQuestions","_asyncToGenerator","_regeneratorRuntime","mark","_callee","amount","difficulty","url","result","wrap","_context","prev","next","concat","fetch","cache","then","response","json","data","results","_objectSpread","_toConsumableArray","incorrect_answers","catch","error","console","log","sent","abrupt","stop","_x","_x2","apply","arguments","App","_React$useState","React","_React$useState2","_slicedToArray","questions","setQuestions","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","_React$useState6","number","setNumber","_React$useState7","_React$useState8","userAnswers","setUserAnswers","_React$useState9","_React$useState10","setScore","_React$useState11","_React$useState12","gameOver","setGameOver","startQuiz","newQuestion","EASY","_Fragment","TOTAL_QUESTIONS","undefined","e","currentTarget","answerObject","length","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.6188cf2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backgroundImage.588d894c.jpg\";","import styled, { createGlobalStyle } from 'styled-components';\r\nimport Image from './images/backgroundImage.jpg';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    background-image: url(${Image});\r\n    background-size: cover;\r\n    margin: 0;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n  }\r\n\r\n  * {\r\n    font-family: 'Catamaran', sans-serif;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div `\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .score {\r\n    font-size : 2rem;\r\n    margin: 0;\r\n  }\r\n  \r\n  .start, .next {\r\n    background: white;\r\n    height: 40px;\r\n    box-shadow: 1px 2px;  \r\n    width: 90%;\r\n    border-radius: 10px;\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    margin: 10px;\r\n`\r\n\r\ntype ButtonWrapperProps = {\r\n    correct: boolean;\r\n    userClicked: boolean;\r\n};\r\n\r\nexport const ButtonWrapper=styled.div<ButtonWrapperProps> `\r\n    button {\r\n        cursor: pointer;\r\n        user-select: none;\r\n        font-size: 0%.8rem;\r\n        width: 100%;\r\n        height: 40px;\r\n        margin: 5px 0;\r\n        background: ${({correct, userClicked}) => \r\n            correct \r\n            ? 'gray' : !correct && \r\n            userClicked ? 'red' : 'White'\r\n        };\r\n        box-shadow: 1px 2px ;\r\n        text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n    }\r\n\r\n`","import * as React from 'react';\r\n\r\nimport {Wrapper, ButtonWrapper} from './QuestionCard.styles'\r\n\r\nimport { AnswerObject } from '../App';\r\n\r\ntype Props = {\r\n  question: string;\r\n  answers: string[];\r\n  callback: any;\r\n  userAnswer: AnswerObject | undefined;\r\n  questionNum: number;\r\n  totalQuestions: number;\r\n};\r\n\r\nconst QuestionCard: React.FC<Props> = ({\r\n  question,\r\n  answers,\r\n  callback,\r\n  userAnswer,\r\n  questionNum,\r\n  totalQuestions,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <p className=\"number\">\r\n        Question: {questionNum} / {totalQuestions}\r\n      </p>\r\n      <p dangerouslySetInnerHTML={{ __html: question }}></p>\r\n      <div>\r\n        {answers.map((ans, index) => (\r\n          <ButtonWrapper key={index} correct={userAnswer?.correct_answer === ans} userClicked={userAnswer?.answer === ans}>\r\n            <button\r\n              disabled={userAnswer ? true : false}\r\n              onClick={callback}\r\n              value={ans}\r\n            >\r\n              <span dangerouslySetInnerHTML={{ __html: ans }}></span>\r\n            </button>\r\n          </ButtonWrapper>\r\n        ))}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n    score: number;\r\n    totalQuestions: number;\r\n}\r\n\r\nconst ScoreBoard:React.FC<Props> = ({score, totalQuestions}) => {\r\n    return (\r\n        <div><h3>Your score is {score}/{totalQuestions}.</h3></div>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard;","export enum Difficulty {\r\n  EASY = 'easy',\r\n  MEDIUM = 'medium',\r\n  HARD = 'hard',\r\n}\r\n\r\nexport type Question = {\r\n  category: string;\r\n  correct_answer: string;\r\n  difficulty: string;\r\n  incorrect_answers: string[];\r\n  question: string;\r\n  type: string;\r\n};\r\n\r\nexport type QuestionState = Question & { answers: string[] };\r\n\r\nexport const fetchQuestions = async (\r\n  amount: number,\r\n  difficulty: Difficulty\r\n) => {\r\n  const url = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}`;\r\n  const result = await fetch(url, { cache: 'force-cache' })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((question: Question) => ({\r\n        ...question,\r\n        answers: [...question.incorrect_answers, question.correct_answer],\r\n      }));\r\n    })\r\n    .catch((error) => console.log(error));\r\n  return result;\r\n};\r\n","import * as React from 'react';\r\nimport { GlobalStyle, Wrapper } from './App.styles';\r\n\r\nimport QuestionCard from './components/QuestionCard';\r\nimport ScoreBoard from './components/Scoreboard';\r\n\r\nimport { fetchQuestions, Difficulty, QuestionState } from './API';\r\n\r\nconst TOTAL_QUESTIONS: number = 2;\r\n\r\nexport type AnswerObject = {\r\n  question: string;\r\n  answer: string;\r\n  correct: boolean;\r\n  correct_answer: string;\r\n};\r\n\r\nexport const App: React.FC = () => {\r\n  const [questions, setQuestions] = React.useState<QuestionState[]>([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [number, setNumber] = React.useState(0);\r\n  const [userAnswers, setUserAnswers] = React.useState<AnswerObject[]>([]);\r\n  const [score, setScore] = React.useState(0);\r\n  const [gameOver, setGameOver] = React.useState(true);\r\n\r\n  console.log('Started ....');\r\n\r\n  const startQuiz = async () => {\r\n    setLoading(true);\r\n    setGameOver(false);\r\n\r\n    const newQuestion = await fetchQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\r\n\r\n    setQuestions(newQuestion);\r\n    setScore(0);\r\n    setUserAnswers([]);\r\n    setNumber(0);\r\n    setLoading(false);\r\n  };\r\n\r\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (!gameOver) {\r\n      //user's answer\r\n      const answer = e.currentTarget.value;\r\n\r\n      //checking answer\r\n      const correct = questions[number].correct_answer === answer;\r\n\r\n      //updating score\r\n      if (correct) {\r\n        setScore(score + 1);\r\n      }\r\n\r\n      //updating answerObject and userAnswers state\r\n      const answerObject = {\r\n        question: questions[number].question,\r\n        answer: answer,\r\n        correct: correct,\r\n        correct_answer: questions[number].correct_answer,\r\n      };\r\n      setUserAnswers([...userAnswers, answerObject]);\r\n      if (number === TOTAL_QUESTIONS - 1) {\r\n        setGameOver(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (number === TOTAL_QUESTIONS - 1) {\r\n      setGameOver(true);\r\n    } else {\r\n      setNumber(number + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Wrapper>\r\n        <h1>Quiz</h1>\r\n        {\r\n          gameOver && number === TOTAL_QUESTIONS - 1 && (<ScoreBoard score={score} totalQuestions={TOTAL_QUESTIONS}/> )\r\n        }\r\n        {gameOver && (\r\n          <button className=\"start\" onClick={startQuiz}>\r\n            {number === TOTAL_QUESTIONS - 1 ? \"Start again\" : \"Start\"}\r\n          </button>\r\n        )}\r\n        {!gameOver && <p className=\"score\">Score : {score}</p>}\r\n        {loading && <p>Loading questions ... </p>}\r\n        {!loading && !gameOver && (\r\n          <QuestionCard\r\n            questionNum={number + 1}\r\n            question={questions[number].question}\r\n            answers={questions[number].answers}\r\n            totalQuestions={TOTAL_QUESTIONS}\r\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\r\n            callback={checkAnswer}\r\n          />\r\n        )}\r\n        {!loading &&\r\n          !gameOver &&\r\n          number !== TOTAL_QUESTIONS - 1 &&\r\n          userAnswers.length === number + 1 && (\r\n            <button className=\"next\" onClick={nextQuestion}>\r\n              Next question\r\n            </button>\r\n          )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default App;\r\n","import * as React from 'react';\r\nimport { StrictMode } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nimport {App} from './App';\r\n\r\nconst rootElement = document.getElementById('root') as HTMLElement;\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}